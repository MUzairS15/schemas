{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Design Schema",
  "description": "Designs are your primary tool for collaborative authorship of your infrastructure, workflow, and processes.",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the design; a descriptive, but concise title for the design document."
    },
    "schemaVersion": {
      "type": "string",
      "description": "Specifies the version of the schema to which the design conforms."
    },
    "version": {
      "type": "string",
      "description": "Revision of the design as expressed by an auto-incremented, SemVer-compliant version number. May be manually set by a user or third-party system, but will always be required to be of version number higher than the previously defined version number.",
      "minLength": 1,
      "maxLength": 50
    },
    "components": {
      "description": "Map of component instances to their corresponding component declarations",
      "additionalProperties": {
        "type": "string",
        "format": "uuid"
      },
      "type": "object",
      "properties": {
        "schemaVersion": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": true
        },
        "model": {
          
            "$id": "https://schemas.meshery.io/model.json",
            "$schema": "http://json-schema.org/draft-07/schema#",
            "description": "Meshery Models serve as a portable unit of packaging to define managed entities, their relationships, and capabilities.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "schemaVersion": {
                "type": "string",
                "description": "Specifies the version of the schema used for the definition.",
                "minLength": 1,
                "maxLength": 50
              },
              "version": {
                "type": "string",
                "description": "Version of the model definition."
              },
              "name": {
                "type": "string",
                "description": "The unique name for the model within the scope of a registrant.",
                "minLength": 1,
                "maxLength": 100
              },
              "displayName": {
                "type": "string",
                "description": "Human-readable name for the model.",
                "minLength": 1,
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "description": "Description of the model.",
                "minLength": 1,
                "maxLength": 1000
              },
              "status": {
                "type": "string",
                "description": "Status of model, including:\n- duplicate: this component is a duplicate of another. The component that is to be the canonical reference and that is duplicated by other components should not be assigned the 'duplicate' status.\n- maintenance: model is unavailable for a period of time.\n- enabled: model is available for use for all users of this Meshery Server.\n- ignored: model is unavailable for use for all users of this Meshery Server.",
                "enum": [
                  "ignored",
                  "enabled",
                  "duplicate"
                ]
              },
              "registrant": {
                "type": "object"
              },
              "category": {
                "type": "string",
                "description": "Category of the model.",
                "minLength": 1,
                "maxLength": 100
              },
              "subCategory": {
                "type": "string",
                "description": "Sub-category of the model.",
                "minLength": 1,
                "maxLength": 100
              },
              "metadata": {
                "type": "object",
                "description": "Metadata containing additional information associated with the model.",
                "required": [
                  "name",
                  "version"
                ],
                "properties": {
                  "isAnnotation": {
                    "type": "boolean",
                    "description": "Indicates whether the model and its entities should be treated as deployable entities or as logical representations."
                  },
                  "primaryColor": {
                    "type": "string",
                    "description": "Primary color associated with the model.",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "secondaryColor": {
                    "type": "string",
                    "description": "Secondary color associated with the model.",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "svgWhite": {
                    "type": "string",
                    "description": "SVG representation of the model in white color.",
                    "minLength": 1
                  },
                  "svgColor": {
                    "type": "string",
                    "description": "SVG representation of the model in colored format.",
                    "minLength": 1
                  },
                  "svgComplete": {
                    "type": "string",
                    "description": "SVG representation of the complete model.",
                    "minLength": 1
                  }
                },
                "additionalProperties": true
              },
              "model": {
                "type": "object",
                "description": "Registrant-defined data associated with the model. Properties pertain to the software being managed (e.g. Kubernetes v1.31)",
                "required": [
                  "version"
                ],
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "Version of the model as defined by the registrant.",
                    "minLength": 1,
                    "maxLength": 100
                  }
                }
              }
            },
            "required": [
              "name",
              "version",
              "registrant",
              "category"
            ]
          
        },
        "component": {
          "type": "object",
          "description": "Component and it's configuration.",
          "properties": {
            "version": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "configuration": {
              "$comment": "The configuration of the component. The configuration is based on the schema defined within the component definition.",
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "required": [
            "version",
            "kind",
            "configuration"
          ]
        }
      },
      "required": [
        "schemaVersion",
        "version",
        "name",
        "model",
        "metadata",
        "component"
      ]
    },
    "preferences": {
      "type": "object",
      "description": "Design-level preferences",
      "properties": {
        "layers": {
          "type": "array",
          "description": "List of available layers",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "layers"
      ]
    },
    "relationships": {
      "type": "array",
      "description": "List of relationships between components",
      "items": {
        "type": "object",
        "properties": {
          "schemaVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "from": {
            "type": "string",
            "format": "uuid",
            "description": "ID (UUID) of the source component"
          },
          "to": {
            "type": "string",
            "format": "uuid",
            "description": "ID (UUID) of the target component"
          },
          "kind": {
            "type": "string",
            "description": "Kind of the relationship"
          },
          "type": {
            "type": "string",
            "description": "Type of the relationship"
          },
          "subType": {
            "type": "string",
            "description": "Subtype of the relationship (optional)"
          },
          "status": {
            "type": "string",
            "enum": [
              "evaluating",
              "valid",
              "invalid"
            ],
            "description": "Status of the relationship"
          }
        },
        "required": [
          "from",
          "to",
          "kind",
          "type",
          "status"
        ]
      }
    }
  },
  "required": [
    "name",
    "schemaVersion",
    "version",
    "components",
    "relationships"
  ]
}